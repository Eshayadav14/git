const handleSaveClick = async (updatedAddress: Address) => {
  // Prepare address with ID if it exists
  const addressWithId = selectedAddress?.Id
    ? { ...updatedAddress, Id: selectedAddress?.Id }
    : updatedAddress;

  // Optimistically update local state
  setAddressData((prevAddressData) =>
    prevAddressData?.map?.((address) =>
      address.ShippingZip === updatedAddress.ShippingZip
        ? updatedAddress
        : { ...address, IsDefaultShippingAddress: false }
    )
  );

  // Submit address and resolve
  let resolvedResult;
  try {
    setEnteredAddress(addressWithId);
    resolvedResult = await dispatch(
      getResolvedAddressAction({
        address: addressWithId,
        isAuthenticated: user,
      })
    ).unwrap();
  } catch (error) {
    return;
  }

  // Handle verification/suggestion modals
  if (!resolvedResult) {
    setShowVerifyModal(true);
    return;
  } else if (resolvedResult.ResolvedAddress) {
    setShowSuggestedModal(true);
    return;
  }

  // If no modal needed â†’ update local state
  const refreshedList = await dispatch(getShippingAddressAction()).unwrap();
  const updatedShippingAddresses = refreshedList?.data?.ShippingAddresses || [];

  setUserShippingAddresses(updatedShippingAddresses);
  setAddressData(updatedShippingAddresses);
  setSelectedAddress(null);
};