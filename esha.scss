Overview

Component Name: Smart Carousel
Description: The Smart Carousel is an enhanced variation of the Static Carousel component. It incorporates advanced features like dynamic spacing, responsive item counts per device, and controlled scroll behavior to offer a flexible and performance-optimized carousel experience.
Nature of the Component: Dynamic Component

⸻

How the Component Works

Functionality:

The Smart Carousel enables users to swipe or click through multiple carousel items (e.g., banners, tiles, or promotional content). It gives authors fine-grained control over spacing, visible items per screen size, and scroll behavior through AEM configuration.

Major Elements:
	•	Carousel Items: Configurable slides with image and text content.
	•	Navigation Controls: Arrows and steppers for navigation, conditionally visible based on screen size.
	•	Pagination: Optional pagination dots.
	•	Responsive Layout: Adapts visible items per page and scroll count based on device size.

⸻

Integration Requirements with AEM

Integration Prerequisites:
	•	Authoring of Smart Carousel JSON fields via AMS interface.
	•	JSON configuration includes both content (carousel items) and carousel behavior settings.

Integration Process:

Data Configuration:
The following data must be passed from AEM to the Smart Carousel component:

JSON

Mapping Data:
Each JSON field should be mapped accordingly to control the carousel rendering logic in the frontend layer.

⸻

API Integration & Endpoints

APIs Used:
No external API calls are made by the Smart Carousel. Internal tracking or analytics can be added using utility functions.

⸻

Component Variations & Visual References

Variation Details:
	•	Based on authoring, the carousel adapts its layout, scroll behavior, and visible item count.
	•	Can be authored to show 1, 2, 3, or 4 items per page depending on screen size and layout width.

Visual Representations:
View in XXL, XL, L, M sizes includes:
	•	Arrows and steppers

View in S, XS sizes includes:
	•	Steppers only

⸻

Major Functions & Behavior

Core Functions:
	•	Responsive Visibility:
	•	Items per page adjust for Desktop, Tablet, and Mobile based on authoring.
	•	Max slides and scroll count vary per device.
	•	Auto Width Control:
	•	disableAutoWidth disables automatic sizing for images, ensuring consistent widths.
	•	Item Spacing:
	•	Small, medium, and large spacing options control gutter size between items.
	•	Scroll Configuration:
	•	Author-controlled scrollByCount and mobileScrollByCount define how many items to shift per navigation.
	•	Aspect Ratio Maintenance:
	•	Images retain their original aspect ratio regardless of carousel container width.

⸻

Accessibility Features
	•	Alt text for images (must be authored)
	•	ARIA roles for navigation controls
	•	Keyboard navigability for steppers and arrows

⸻

Resources & Related Files

Linked Files:
	•	smart-carousel.hbs [Path: src/dgweb/ui.frontend/src/app/components/smart-carousel/smart-carousel.hbs]
	•	smart-carousel.json [Path: src/dgweb/ui.frontend/src/app/components/smart-carousel/smart-carousel.json]
	•	smart-carousel.scss [Path: src/dgweb/ui.frontend/src/app/components/smart-carousel/smart-carousel.scss]
	•	smart-carousel.ts [Path: src/dgweb/ui.frontend/src/app/components/smart-carousel/smart-carousel.ts]

Figma Link:
Figma URL – Link (Please refer to project repository)

⸻

JIRA Story ID:

JIRA Story ID: [DSE-XXXXX] Components | AEM | FE | Create Smart Carousel Component

⸻

Additional Information

Customization & Theming:
	•	Carousel appearance and behavior can be fully themed via SCSS and JSON.
	•	Layout responsiveness is managed via CSS grid/flex rules combined with SplideJS configuration.

Dependencies:
	•	Utilizes SplideJS for carousel logic.
	•	No third-party service dependency.

Utility Functions:
	•	trackCarouselNavigation() for analytics events
	•	getResponsiveBreakpoint() to dynamically switch carousel config based on viewport