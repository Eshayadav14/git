Overview

Component Name: CTA (Call To Action)
Description: The CTA component is a flexible and interactive UI element designed for various user actions. It supports a wide range of button styles, icons, semantics, tooltips, popovers, and modal interactions.
Nature of the Component: Static Component (with dynamic behavior)

⸻

How the Component Works

Functionality

The CTA component renders interactive buttons that can trigger navigations, tooltips, popovers, or modals based on authored configurations.
It supports various button types, sizes, shapes, and semantics, as well as ADA-compliant states and behaviors.

⸻

Major Elements
	•	Button Type: Primary, Secondary, Tertiary, Outline (dark/light), Dashed, Link, Underline (blue/black)
	•	Button Size: Small, Medium, Large
	•	Button Shape: Standard, Pill, Circle, Square
	•	Semantics: Danger (Red), Positive (Green)
	•	Button States: Default, Hover, Focus, Active, Disabled (handled on interaction, not authored)
	•	Icons: Optional icon-left or icon-right support
	•	Tooltip: Shows brief messages on hover
	•	Popover: Shows title, description, and action buttons on click
	•	Modal Trigger: Buttons can open a modal if modalId is authored and matches an ID in a modal component

⸻

Integration Requirements with AEM

Integration Prerequisites

JSON data must be passed from AEM including CTA button configurations and optional Tooltip/Popover/Modal data.

Mapping Data

Map the JSON fields to corresponding UI logic and styles in the component:
	•	button-type, button-size, and button-shape map directly to CSS classes
	•	tooltip and popover are conditional elements rendered based on existence
	•	modalId triggers modal logic if matched with a modal component

⸻

API Integration & Endpoints

No external API is required. Optional analytics can be implemented using:
	•	pushEventOnComponentClicked for click tracking

⸻

Component Variations & Visual References

Variation Details

All permutations of:
	•	Type × Size × Shape × Semantic × State
	•	Tooltip color (black, yellow, tonal) and direction (12 directions)
	•	Popover content layout (with 1 or 2 CTAs)

⸻

Visual Representations

Web View:
	•	Default view with all button variations
	•	Hover + Focus states for ADA compliance
	•	Circle & Square buttons with icon-only appearance
	•	Tooltip preview on hover
	•	Popover view on click with optional single or dual CTAs
	•	Modal triggering example

⸻

Major Functions & Behavior

Core Functions
	•	Button Styling: Dynamically styled based on authored types, sizes, shapes
	•	Tooltip Integration: Appears on hover, varies by style and direction
	•	Popover Integration: Appears on click, supports full content layout with two standard-small buttons
	•	Modal Triggering: Uses modalId for opening associated modal
	•	Accessibility: Focus indicators, semantic roles, ARIA labels per ADA guidelines

⸻

Resources & Related Files

Linked Files:
	•	cta-button.hbs – [Path: src\components\cta-button\cta-button.hbs]
	•	cta-button.json – [Path: src\components\cta-button\cta-button.json]
	•	cta-button.scss – [Path: src\components\cta-button\cta-button.scss]
	•	cta-button.ts – [Path: src\components\cta-button\cta-button.ts]

Tooltip Config:
	•	tooltip.json – [Path: src\components\cta-button\tooltip.json]

Utility Functions:
	•	pushEventOnComponentClicked – Analytics tracking

⸻

Accessibility

CTA Buttons, Tooltips, and Popovers all meet ADA standards as outlined in the ADA Best Practices Document. States are visually and programmatically defined.

⸻

Notes
	•	Tooltip and Popover styles are configured via the style brush in AEM
	•	Circle and Square buttons only render icons—text should not be authored
	•	Background remains unblurred during Popover display
	•	Tooltips should be concise (character limit recommended)